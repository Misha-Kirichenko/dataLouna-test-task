services:
  items:
    build: .
    container_name: skinport-api
    command: ["wait-for-it", "${POSTGRES_HOST}:${POSTGRES_PORT}", "--", "npm", "run", "install_migrate_seed_and_start"]
    depends_on:
      - postgres
      - redis
    ports:
      - ${APP_PORT}:${APP_PORT}
    environment:
      PORT: ${APP_PORT}
    networks:
      - skinport-network
    env_file:
      - .env

  redis:
    image: redis
    container_name: redis
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    environment:
      REDIS_PORT: ${REDIS_PORT}
    networks:
      - skinport-network
    volumes:
      - redis-data:/data

  postgres:
    container_name: skinport-db
    image: postgres
    restart: on-failure
    env_file:
      - .env
    networks:
      - skinport-network
    environment:
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - skinportDB:/var/lib/postgresql/data

networks:
  skinport-network:

volumes:
  redis-data:
  skinportDB:
